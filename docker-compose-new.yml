version: '3.8'

name: ailinguo-java-react

networks:
  ailinguo-network:
    driver: bridge

services:
  # MongoDB Database
  mongo:
    image: mongo:7
    container_name: ailinguo-mongo
    environment:
      - MONGO_INITDB_DATABASE=ailinguo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - ailinguo-network
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # Backend Java (Spring Boot)
  backend:
    build:
      context: ./backend-java
      dockerfile: Dockerfile
    container_name: ailinguo-backend
    environment:
      - MONGODB_URI=mongodb://mongo:27017/ailinguo
      - DB_NAME=ailinguo
      - JWT_SECRET=58a19f8830f8b701c64d6130285277fcfe80ae7509e9afbdb212a2557448df90ec94a4b8e414be657462ae1d52fad28cb43cdc110e5f4275ef2c5a441949a0a7
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - AI_TUTOR_MOCK=${AI_TUTOR_MOCK:-true}
      - CORS_ORIGINS=http://localhost:3000,http://localhost:80
      - PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - ailinguo-network
    restart: unless-stopped

  # Frontend React (Vite + Nginx)
  frontend:
    build:
      context: ./frontend-react
      dockerfile: Dockerfile
    container_name: ailinguo-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - ailinguo-network
    restart: unless-stopped

volumes:
  mongo_data:

